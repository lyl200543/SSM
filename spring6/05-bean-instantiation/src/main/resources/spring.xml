<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--通过构造方法实例化-->
    <!--在spring配置文件中直接配置类全路径，Spring会自动调用该类的无参数构造方法来实例化Bean-->
    <bean id="springBean" class="com.lyl.spring6.springBean"/>

    <!--通过简单工厂模式实例化-->
    <!--你需要在spring配置文件中告诉spring框架，调用哪个类的哪个方法获取Bean-->
    <!--factory-method 属性指定的是工厂类当中的静态方法。也就是告诉Spring框架，调用这个方法可以获取Bean。-->
    <bean id="starBean" class="com.lyl.spring6.starFactory" factory-method="get"/>

    <!--通过工厂方法模式实例化-->
    <!--通过 factory-bean属性 + factory-method属性来共同完成。-->
    <!--告诉Spring框架，调用哪个对象的哪个方法来获取Bean。-->
    <!--factory-begn属性告诉Spring调用哪个对象。factory-method告诉Spring调用该对象的哪个方法。-->
    <bean id="gunFactory" class="com.lyl.spring6.gunFactory"/>
    <bean id="gunBean" factory-bean="gunFactory" factory-method="get"/>

    <!--通过FactoryBean接口来实现。-->
    <!--这种方式实际上就是第三种方式的简化。-->
    <!--由于你编写的类实现了FactoryBean接口，所以这个类是一个特殊的类
        不需要你再手动指定:factory-bean、factory-method-->
    <!--通过一个特殊的Bean:工厂Bean。来返回一个普通的Bean Person对象。-->
    <!--通过FactoryBean这个T厂Bean主要是想对普通Bean进行加工处理。-->
    <bean id="personBean" class="com.lyl.spring6.personFactory"/>

    <!--使用FactoryBean实现日期类型的注入-->
    <bean id="date" class="com.lyl.spring6.dateFactory">
        <constructor-arg index="0" value="2005-04-30"/>
    </bean>

    <bean id="sb" class="com.lyl.spring6.Student">
        <property name="birth" ref="date"/>
    </bean>

</beans>